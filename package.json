{
    "name": "universal-devtools",
    "private": true,
    "version": "0.1.0",
    "packageManager": "pnpm@10.12.1",
    "scripts": {
        "commit": "cz",
        "format": "prettier --config .prettier.config.mjs --write .",
        "format:check": "prettier --config .prettier.config.mjs --check .",
        "changeset:init": "changeset init",
        "changeset": "changeset",
        "changeset:add": "changeset",
        "changeset:version": "changeset version",
        "changeset:release": "changeset publish",
        "lint:spellcheck": "cspell --config .cspell.config.mjs",
        "lint:base": "mega-linter-runner --container-name megalinter --platform linux/amd64 --path . --image ghcr.io/oxsecurity/megalinter@sha256:930b3dbfcfd6814db7e8462f335ebeae8dc1715aeaebb19b0414692ed9930145",
        "lint:mypy": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_MYPY",
        "lint:actionlint": "npm run lint:base -- --env ENABLE_LINTERS=ACTION_ACTIONLINT",
        "lint:ansible": "npm run lint:base -- --env ENABLE_LINTERS=ANSIBLE_ANSIBLE_LINT",
        "lint:spectral": "npm run lint:base -- --env ENABLE_LINTERS=API_SPECTRAL",
        "lint:arm-ttk": "npm run lint:base -- --env ENABLE_LINTERS=ARM_ARM_TTK",
        "lint:bash_exec": "npm run lint:base -- --env ENABLE_LINTERS=BASH_EXEC",
        "lint:shellcheck": "npm run lint:base -- --env ENABLE_LINTERS=BASH_SHELLCHECK",
        "lint:shfmt": "npm run lint:base -- --env ENABLE_LINTERS=BASH_SHFMT",
        "lint:bicep": "npm run lint:base -- --env ENABLE_LINTERS=BICEP_BICEP_LINT",
        "lint:bicep-linter": "npm run lint:base -- --env ENABLE_LINTERS=BICEP_BICEP_LINTER",
        "lint:clojure-cljstyle": "npm run lint:base -- --env ENABLE_LINTERS=CLOJURE_CLJSTYLE",
        "lint:clojure-clj-kondo": "npm run lint:base -- --env ENABLE_LINTERS=CLOJURE_CLJ_KONDO",
        "lint:cloudformation": "npm run lint:base -- --env ENABLE_LINTERS=CLOUDFORMATION_CFN_LINT",
        "lint:coffeelint": "npm run lint:base -- --env ENABLE_LINTERS=COFFEE_COFFEELINT",
        "lint:cpp-clang-format": "npm run lint:base -- --env ENABLE_LINTERS=CPP_CLANG_FORMAT",
        "lint:cpp-cpplint": "npm run lint:base -- --env ENABLE_LINTERS=CPP_CPPLINT",
        "lint:credentials-secretlint": "npm run lint:base -- --env ENABLE_LINTERS=CREDENTIALS_SECRETLINT",
        "lint:csharp-csharpier": "npm run lint:base -- --env ENABLE_LINTERS=CSHARP_CSHARPIER",
        "lint:csharp-dotnet-format": "npm run lint:base -- --env ENABLE_LINTERS=CSHARP_DOTNET_FORMAT",
        "lint:csharp-roslynator": "npm run lint:base -- --env ENABLE_LINTERS=CSHARP_ROSLYNATOR",
        "lint:css-scss-lint": "npm run lint:base -- --env ENABLE_LINTERS=CSS_SCSS_LINT",
        "lint:css-stylelint": "npm run lint:base -- --env ENABLE_LINTERS=CSS_STYLELINT",
        "lint:c-clang-format": "npm run lint:base -- --env ENABLE_LINTERS=C_CLANG_FORMAT",
        "lint:c-cpplint": "npm run lint:base -- --env ENABLE_LINTERS=C_CPPLINT",
        "lint:dart": "npm run lint:base -- --env ENABLE_LINTERS=DART_DARTANALYZER",
        "lint:dockerfile-dockerfilelint": "npm run lint:base -- --env ENABLE_LINTERS=DOCKERFILE_DOCKERFILELINT",
        "lint:dockerfile-hadolint": "npm run lint:base -- --env ENABLE_LINTERS=DOCKERFILE_HADOLINT",
        "lint:editorconfig": "npm run lint:base -- --env ENABLE_LINTERS=EDITORCONFIG_EDITORCONFIG_CHECKER",
        "lint:env-dotenv-linter": "npm run lint:base -- --env ENABLE_LINTERS=ENV_DOTENV_LINTER",
        "lint:gherkin": "npm run lint:base -- --env ENABLE_LINTERS=GHERKIN_GHERKIN_LINT",
        "lint:git-diff": "npm run lint:base -- --env ENABLE_LINTERS=GIT_GIT_DIFF",
        "lint:go-golangci-lint": "npm run lint:base -- --env ENABLE_LINTERS=GO_GOLANGCI_LINT",
        "lint:go-revive": "npm run lint:base -- --env ENABLE_LINTERS=GO_REVIVE",
        "lint:graphql-schema-linter": "npm run lint:base -- --env ENABLE_LINTERS=GRAPHQL_GRAPHQL_SCHEMA_LINTER",
        "lint:groovy": "npm run lint:base -- --env ENABLE_LINTERS=GROOVY_NPM_GROOVY_LINT",
        "lint:html-djlint": "npm run lint:base -- --env ENABLE_LINTERS=HTML_DJLINT",
        "lint:html-htmlhint": "npm run lint:base -- --env ENABLE_LINTERS=HTML_HTMLHINT",
        "lint:javascript-es": "npm run lint:base -- --env ENABLE_LINTERS=JAVASCRIPT_ES",
        "lint:javascript-prettier": "npm run lint:base -- --env ENABLE_LINTERS=JAVASCRIPT_PRETTIER",
        "lint:javascript-standard": "npm run lint:base -- --env ENABLE_LINTERS=JAVASCRIPT_STANDARD",
        "lint:java-checkstyle": "npm run lint:base -- --env ENABLE_LINTERS=JAVA_CHECKSTYLE",
        "lint:java-pmd": "npm run lint:base -- --env ENABLE_LINTERS=JAVA_PMD",
        "lint:json-eslint-plugin-jsonc": "npm run lint:base -- --env ENABLE_LINTERS=JSON_ESLINT_PLUGIN_JSONC",
        "lint:json-jsonlint": "npm run lint:base -- --env ENABLE_LINTERS=JSON_JSONLINT",
        "lint:json-npm-package-json-lint": "npm run lint:base -- --env ENABLE_LINTERS=JSON_NPM_PACKAGE_JSON_LINT",
        "lint:json-prettier": "npm run lint:base -- --env ENABLE_LINTERS=JSON_PRETTIER",
        "lint:json-v8r": "npm run lint:base -- --env ENABLE_LINTERS=JSON_V8R",
        "lint:jsx-eslint": "npm run lint:base -- --env ENABLE_LINTERS=JSX_ESLINT",
        "lint:kotlin-detekt": "npm run lint:base -- --env ENABLE_LINTERS=KOTLIN_DETEKT",
        "lint:kotlin-ktlint": "npm run lint:base -- --env ENABLE_LINTERS=KOTLIN_KTLINT",
        "lint:kubernetes-helm": "npm run lint:base -- --env ENABLE_LINTERS=KUBERNETES_HELM",
        "lint:kubernetes-kubeconform": "npm run lint:base -- --env ENABLE_LINTERS=KUBERNETES_KUBECONFORM",
        "lint:kubernetes-kubescape": "npm run lint:base -- --env ENABLE_LINTERS=KUBERNETES_KUBESCAPE",
        "lint:kubernetes-kubeval": "npm run lint:base -- --env ENABLE_LINTERS=KUBERNETES_KUBEVAL",
        "lint:chktex": "npm run lint:base -- --env ENABLE_LINTERS=LATEX_CHKTEX",
        "lint:lua-luacheck": "npm run lint:base -- --env ENABLE_LINTERS=LUA_LUACHECK",
        "lint:makefile-checkmake": "npm run lint:base -- --env ENABLE_LINTERS=MAKEFILE_CHECKMAKE",
        "lint:markdown-markdownlint": "npm run lint:base -- --env ENABLE_LINTERS=MARKDOWN_MARKDOWNLINT",
        "lint:markdown-link-check": "npm run lint:base -- --env ENABLE_LINTERS=MARKDOWN_MARKDOWN_LINK_CHECK",
        "lint:markdown-table-formatter": "npm run lint:base -- --env ENABLE_LINTERS=MARKDOWN_MARKDOWN_TABLE_FORMATTER",
        "lint:markdown-remark-lint": "npm run lint:base -- --env ENABLE_LINTERS=MARKDOWN_REMARK_LINT",
        "lint:openapi-spectral": "npm run lint:base -- --env ENABLE_LINTERS=OPENAPI_SPECTRAL",
        "lint:perl-perlcritic": "npm run lint:base -- --env ENABLE_LINTERS=PERL_PERLCRITIC",
        "lint:php-builtin": "npm run lint:base -- --env ENABLE_LINTERS=PHP_BUILTIN",
        "lint:php-phpcs": "npm run lint:base -- --env ENABLE_LINTERS=PHP_PHPCS",
        "lint:php-phplint": "npm run lint:base -- --env ENABLE_LINTERS=PHP_PHPLINT",
        "lint:php-phpstan": "npm run lint:base -- --env ENABLE_LINTERS=PHP_PHPSTAN",
        "lint:php-psalm": "npm run lint:base -- --env ENABLE_LINTERS=PHP_PSALM",
        "lint:powershell": "npm run lint:base -- --env ENABLE_LINTERS=POWERSHELL_POWERSHELL",
        "lint:powershell-formatter": "npm run lint:base -- --env ENABLE_LINTERS=POWERSHELL_POWERSHELL_FORMATTER",
        "lint:protobuf-protolint": "npm run lint:base -- --env ENABLE_LINTERS=PROTOBUF_PROTOLINT",
        "lint:puppet-puppet-lint": "npm run lint:base -- --env ENABLE_LINTERS=PUPPET_PUPPET_LINT",
        "lint:python-bandit": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_BANDIT",
        "lint:python-black": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_BLACK",
        "lint:python-flake8": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_FLAKE8",
        "lint:python-isort": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_ISORT",
        "lint:python-mypy": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_MYPY",
        "lint:python-pylint": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_PYLINT",
        "lint:python-pyright": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_PYRIGHT",
        "lint:python-ruff": "npm run lint:base -- --env ENABLE_LINTERS=PYTHON_RUFF",
        "lint:raku": "npm run lint:base -- --env ENABLE_LINTERS=RAKU_RAKU",
        "lint:repository-checkov": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_CHECKOV",
        "lint:repository-devskim": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_DEVSKIM",
        "lint:repository-dustilock": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_DUSTILOCK",
        "lint:repository-gitleaks": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_GITLEAKS",
        "lint:repository-git-diff": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_GIT_DIFF",
        "lint:repository-goodcheck": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_GOODCHECK",
        "lint:repository-grype": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_GRYPE",
        "lint:repository-kics": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_KICS",
        "lint:repository-secretlint": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_SECRETLINT",
        "lint:repository-semgrep": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_SEMGREP",
        "lint:repository-syft": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_SYFT",
        "lint:repository-trivy": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_TRIVY",
        "lint:repository-trivy-sbom": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_TRIVY_SBOM",
        "lint:repository-trufflehog": "npm run lint:base -- --env ENABLE_LINTERS=REPOSITORY_TRUFFLEHOG",
        "lint:rst-rstcheck": "npm run lint:base -- --env ENABLE_LINTERS=RST_RSTCHECK",
        "lint:rst-rstfmt": "npm run lint:base -- --env ENABLE_LINTERS=RST_RSTFMT",
        "lint:rst-rst-lint": "npm run lint:base -- --env ENABLE_LINTERS=RST_RST_LINT",
        "lint:ruby-rubocop": "npm run lint:base -- --env ENABLE_LINTERS=RUBY_RUBOCOP",
        "lint:rust-clippy": "npm run lint:base -- --env ENABLE_LINTERS=RUST_CLIPPY",
        "lint:r-lintr": "npm run lint:base -- --env ENABLE_LINTERS=R_LINTR",
        "lint:salesforce-lightning-flow-scanner": "npm run lint:base -- --env ENABLE_LINTERS=SALESFORCE_LIGHTNING_FLOW_SCANNER",
        "lint:salesforce-sfdx-scanner-apex": "npm run lint:base -- --env ENABLE_LINTERS=SALESFORCE_SFDX_SCANNER_APEX",
        "lint:salesforce-sfdx-scanner-aura": "npm run lint:base -- --env ENABLE_LINTERS=SALESFORCE_SFDX_SCANNER_AURA",
        "lint:salesforce-sfdx-scanner-lwc": "npm run lint:base -- --env ENABLE_LINTERS=SALESFORCE_SFDX_SCANNER_LWC",
        "lint:scala-scalafix": "npm run lint:base -- --env ENABLE_LINTERS=SCALA_SCALAFIX",
        "lint:snakemake-lint": "npm run lint:base -- --env ENABLE_LINTERS=SNAKEMAKE_LINT",
        "lint:snakemake-snakefmt": "npm run lint:base -- --env ENABLE_LINTERS=SNAKEMAKE_SNAKEFMT",
        "lint:spell-cspell": "npm run lint:base -- --env ENABLE_LINTERS=SPELL_CSPELL",
        "lint:spell-lychee": "npm run lint:base -- --env ENABLE_LINTERS=SPELL_LYCHEE",
        "lint:spell-misspell": "npm run lint:base -- --env ENABLE_LINTERS=SPELL_MISSPELL",
        "lint:spell-proselint": "npm run lint:base -- --env ENABLE_LINTERS=SPELL_PROSELINT",
        "lint:spell-vale": "npm run lint:base -- --env ENABLE_LINTERS=SPELL_VALE",
        "lint:sql-sqlfluff": "npm run lint:base -- --env ENABLE_LINTERS=SQL_SQLFLUFF",
        "lint:sql-sql-lint": "npm run lint:base -- --env ENABLE_LINTERS=SQL_SQL_LINT",
        "lint:sql-tsqllint": "npm run lint:base -- --env ENABLE_LINTERS=SQL_TSQLLINT",
        "lint:swift-swiftlint": "npm run lint:base -- --env ENABLE_LINTERS=SWIFT_SWIFTLINT",
        "lint:tekton-tekton-lint": "npm run lint:base -- --env ENABLE_LINTERS=TEKTON_TEKTON_LINT",
        "lint:terraform-checkov": "npm run lint:base -- --env ENABLE_LINTERS=TERRAFORM_CHECKOV",
        "lint:terraform-kics": "npm run lint:base -- --env ENABLE_LINTERS=TERRAFORM_KICS",
        "lint:terraform-terraform-fmt": "npm run lint:base -- --env ENABLE_LINTERS=TERRAFORM_TERRAFORM_FMT",
        "lint:terraform-terragrunt": "npm run lint:base -- --env ENABLE_LINTERS=TERRAFORM_TERRAGRUNT",
        "lint:terraform-terrascan": "npm run lint:base -- --env ENABLE_LINTERS=TERRAFORM_TERRASCAN",
        "lint:terraform-tflint": "npm run lint:base -- --env ENABLE_LINTERS=TERRAFORM_TFLINT",
        "lint:tsx-eslint": "npm run lint:base -- --env ENABLE_LINTERS=TSX_ESLINT",
        "lint:typescript-es": "npm run lint:base -- --env ENABLE_LINTERS=TYPESCRIPT_ES",
        "lint:typescript-prettier": "npm run lint:base -- --env ENABLE_LINTERS=TYPESCRIPT_PRETTIER",
        "lint:typescript-standard": "npm run lint:base -- --env ENABLE_LINTERS=TYPESCRIPT_STANDARD",
        "lint:vbdotnet-dotnet-format": "npm run lint:base -- --env ENABLE_LINTERS=VBDOTNET_DOTNET_FORMAT",
        "lint:xml-xmllint": "npm run lint:base -- --env ENABLE_LINTERS=XML_XMLLINT",
        "lint:yaml-prettier": "npm run lint:base -- --env ENABLE_LINTERS=YAML_PRETTIER",
        "lint:yaml-v8r": "npm run lint:base -- --env ENABLE_LINTERS=YAML_V8R",
        "lint:yaml-yamllint": "npm run lint:base -- --env ENABLE_LINTERS=YAML_YAMLLINT",
        "lint:copypaste": "jscpd --config .jscpd.json"
    },
    "config": {
        "commitizen": {
            "path": "cz-emoji",
            "config": ".czrc"
        }
    },
    "devDependencies": {
        "@changesets/cli": "2.29.4",
        "@commitlint/cli": "19.8.1",
        "@commitlint/config-conventional": "19.8.1",
        "@cspell/cspell-json-reporter": "9.1.1",
        "@stoplight/spectral-cli": "6.15.0",
        "commitizen": "4.3.1",
        "commitlint-plugin-gitmoji": "2.2.6",
        "conventional-changelog-gitmoji-config": "1.5.2",
        "cspell": "9.1.1",
        "cz-emoji": "1.3.1",
        "jscpd": "4.0.5",
        "mega-linter-runner": "8.8.0",
        "prettier": "3.5.3",
        "prettier-plugin-pkg": "0.21.1",
        "prettier-plugin-sh": "0.17.4",
        "semantic-release": "24.2.5",
        "semantic-release-config-gitmoji": "1.5.3"
    }
}
