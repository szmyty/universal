# dpkg configuration file
#
# This file can contain default options for dpkg.  All command-line
# options are allowed.  Values can be specified by putting them after
# the option, separated by whitespace and/or an `=' sign.
#

# Log status changes and actions to a file.
log /var/log/dpkg.log

# Use existing config files without prompting (helps auto upgrades)
force confdef,confold

# Exclude unnecessary files to minimize image size
path-exclude=/usr/share/doc/*
path-exclude=/usr/share/man/*
path-exclude=/usr/share/groff/*
path-exclude=/usr/share/info/*
path-exclude=/usr/share/lintian/*
path-exclude=/usr/share/linda/*
# path-exclude=/usr/share/zoneinfo/*

# we need to keep copyright files for legal reasons
path-include=/usr/share/doc/*/copyright

# Only include English localization files
path-exclude=/usr/share/locale/*
path-include=/usr/share/locale/en*

# Do not enable debsig-verify by default; since the distribution is not using
# embedded signatures, debsig-verify would reject all packages.
no-debsig

# Disable the use of a pager for output.
# This setting ensures that dpkg output is not piped through a pager like 'less',
# which is unnecessary in a Docker context where output is typically logged or streamed.
# Disabling the pager prevents any potential issues with interactive commands
# that might pause output, ensuring a smoother, non-interactive operation.
no-pager

# Uncomment the following line to enable unsafe I/O operations.
# This setting, when enabled, bypasses certain safety mechanisms in dpkg
# to speed up package installations and removals by skipping the flushing of
# file system buffers to disk. While this can significantly improve performance
# in environments like Docker where containers are ephemeral, it also increases
# the risk of data corruption in the event of a system crash or power loss.
# Use with caution, especially in non-ephemeral environments.
# force-unsafe-io

# Disable the use of a pseudo-terminal (PTY) for dpkg operations.
# This setting ensures that dpkg does not attempt to use a PTY, which is unnecessary
# in non-interactive environments like Docker. It helps prevent issues related to PTY
# handling and ensures that all output is directly managed through standard input/output streams.
Dpkg::Use-Pty 0;

# Uncomment the following line to enable debsig-verify.
# This setting enforces the verification of embedded signatures in .deb packages.
# Only enable this if you are working in a highly secure environment where all
# packages are signed with embedded signatures, and you want to ensure that only
# verified packages are installed. Be aware that enabling this will cause most
# packages from standard repositories to be rejected, as they typically do not
# include embedded signatures.
# debsig-verify
