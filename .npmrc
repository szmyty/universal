#### .npmrc - npm configuration file
# Configuration file for npm CLI.
# This file allows you to customize npm behavior.
# You can set global or project-specific options using this file.
# Documentation: https://docs.npmjs.com/files/npmrc

# _auth
# A basic-auth string to use when authenticating against the npm registry. This will ONLY be used to authenticate against the npm registry. For other registries, you will need to scope it like "//other-registry.tld/:_auth"
# Warning: This should generally not be set via a command-line option. It is safer to use a registry-provided authentication bearer token stored in the ~/.npmrc file by running `npm login`.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#_auth
# _auth=null

# access
# If you do not want your scoped package to be publicly viewable (and installable) set --access=restricted.
# Note: This defaults to not changing the current access level for existing packages. Specifying a value of `restricted` or `public` during publish will change the access for an existing package the same way that `npm access set status` would.
# Default: 'public' for new packages, existing packages it will not change the current level
# Type: null, "restricted", or "public"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#access
access=public

# all
# When running `npm outdated` and `npm ls`, setting `--all` will show all outdated or installed packages, rather than only those directly depended upon by the current project.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#all
all=false

# allow-same-version
# Prevents throwing an error when `npm version` is used to set the new version to the same value as the current version.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#allow-same-version
allow-same-version=false

# audit
# When "true" submit audit reports alongside the current npm command to the default registry and all registries configured for scopes. See the documentation for `npm audit` for details on what is submitted.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#audit
audit=true

# audit-level
# The minimum level of vulnerability for `npm audit` to exit with a non-zero exit code.
# Default: null
# Type: null, "info", "low", "moderate", "high", "critical", or "none"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#audit-level
audit-level=low

# auth-type
# What authentication strategy to use with login. Note that if an `otp` config is given, this value will always be set to legacy.
# Default: "web"
# Type: "legacy" or "web"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#auth-type
auth-type=web

# before
# If passed to `npm install`, will rebuild the npm tree such that only versions that were available on or before the `--before` time get installed. If there's no versions available for the current set of direct dependencies, the command will error.
# Default: null
# Type: null or Date
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#before
# before=null

# bin-links
# Tells npm to create symlinks (or .cmd shims on Windows) for package executables.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#bin-links
bin-links=true

# browser
# The browser that is called by npm commands to open websites.
# Default: OS X: "open", Windows: "start", Others: "xdg-open"
# Type: null, Boolean, or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#browser
browser=true

# ca
# The Certificate Authority signing certificate that is trusted for SSL connections to the registry. Values should be in PEM format with newlines replaced by the string "\n".
# Default: null
# Type: null or String (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#ca
# ca=null

# cache
# The location of npm's cache directory.
# Default: Windows: %LocalAppData%\npm-cache, Posix: ~/.npm
# Type: Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#cache
cache=./.cache/npm/npm-cache

# cafile
# A path to a file containing one or multiple Certificate Authority signing certificates. Similar to the `ca` setting, but allows for multiple CA's, as well as for the CA information to be stored in a file on disk.
# Default: null
# Type: Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#cafile
# cafile=null

# call
# Optional companion option for `npm exec`, `npx` that allows for specifying a custom command to be run along with the installed packages.
# Default: ""
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#call
# call=""

# cidr
# This is a list of CIDR address to be used when configuring limited access tokens with the `npm token create` command.
# Default: null
# Type: null or String (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#cidr
# cidr=null

# color
# If false, never shows colors. If "always" then always shows colors. If true, then only prints color codes for tty file descriptors.
# Default: true unless the NO_COLOR environment is set to something other than '0'
# Type: "always" or Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#color
color=true

# commit-hooks
# Run git commit hooks when using the `npm version` command.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#commit-hooks
commit-hooks=true

# cpu
# Override CPU architecture of native modules to install.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#cpu
# cpu=null

# depth
# The depth to go when recursing packages for `npm ls`.
# Default: Infinity if --all is set, otherwise 1
# Type: null or Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#depth
depth=1

# description
# Show the description in `npm search`.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#description-1
description=true

# diff
# Define arguments to compare in `npm diff`.
# Default: ""
# Type: String (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff
# diff=""

# diff-dst-prefix
# Destination prefix to be used in `npm diff` output.
# Default: "b/"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff-dst-prefix
diff-dst-prefix="b/"

# diff-ignore-all-space
# Ignore whitespace when comparing lines in `npm diff`.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff-ignore-all-space
diff-ignore-all-space=false

# diff-name-only
# Prints only filenames when using `npm diff`.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff-name-only
diff-name-only=false

# diff-no-prefix
# Do not show any source or destination prefix in `npm diff` output.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff-no-prefix
diff-no-prefix=false

# diff-src-prefix
# Source prefix to be used in `npm diff` output.
# Default: "a/"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff-src-prefix
diff-src-prefix="a/"

# diff-text
# Treat all files as text in `npm diff`.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff-text
diff-text=false

# diff-unified
# The number of lines of context to print in `npm diff`.
# Default: 3
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#diff-unified
diff-unified=3

# dry-run
# Indicates that you don't want npm to make any changes and that it should only report what it would have done.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#dry-run
dry-run=false

# editor
# The command to run for `npm edit` and `npm config edit`.
# Default: The EDITOR or VISUAL environment variables, or '%SYSTEMROOT%\notepad.exe' on Windows, or 'vi' on Unix systems
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#editor
# editor=""

# engine-strict
# If set to true, then npm will stubbornly refuse to install (or even consider installing) any package that claims to not be compatible with the current Node.js version.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#engine-strict
engine-strict=true

# expect-result-count
# Tells to expect a specific number of results from the command.
# Default: null
# Type: null or Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#expect-result-count
# expect-result-count=null

# expect-results
# Tells npm whether or not to expect results from the command. Can be either true (expect some results) or false (expect no results).
# Default: null
# Type: null or Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#expect-results
# expect-results=null

# fetch-retries
# The "retries" config for the retry module to use when fetching packages from the registry.
# Default: 2
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#fetch-retries
fetch-retries=2

# fetch-retry-factor
# The "factor" config for the retry module to use when fetching packages.
# Default: 10
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#fetch-retry-factor
fetch-retry-factor=10

# fetch-retry-maxtimeout
# The "maxTimeout" config for the retry module to use when fetching packages.
# Default: 60000 (1 minute)
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#fetch-retry-maxtimeout
fetch-retry-maxtimeout=60000

# fetch-retry-mintimeout
# The "minTimeout" config for the retry module to use when fetching packages.
# Default: 10000 (10 seconds)
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#fetch-retry-mintimeout
fetch-retry-mintimeout=10000

# fetch-timeout
# The maximum amount of time to wait for HTTP requests to complete.
# Default: 300000 (5 minutes)
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#fetch-timeout
fetch-timeout=300000

# force
# Removes various protections against unfortunate side effects, common mistakes, unnecessary performance degradation, and malicious input.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#force
force=false

# foreground-scripts
# Run all build scripts (ie, preinstall, install, and postinstall) scripts for installed packages in the foreground process, sharing standard input, output, and error with the main npm process.
# Default: false unless when using npm pack or npm publish where it defaults to true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#foreground-scripts
foreground-scripts=false

# format-package-lock
# Format package-lock.json or npm-shrinkwrap.json as a human readable file.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#format-package-lock
format-package-lock=true

# fund
# When "true" displays the message at the end of each npm install acknowledging the number of dependencies looking for funding.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#fund
fund=false

# git
# The command to use for git commands. If git is installed on the computer, but is not in the PATH, then set this to the full path to the git binary.
# Default: "git"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#git
git="git"

# git-tag-version
# Tag the commit when using the npm version command. Setting this to false results in no commit being made at all.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#git-tag-version
git-tag-version=true

# global
# Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#global
global=false

# globalconfig
# The config file to read for global config options.
# Default: The global --prefix setting plus 'etc/npmrc'. For example, '/usr/local/etc/npmrc'
# Type: Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#globalconfig
# globalconfig=""

# heading
# The string that starts all the debugging log output.
# Default: "npm"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#heading
heading="npm"

# https-proxy
# A proxy to use for outgoing https requests.
# Default: null
# Type: null or URL
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#https-proxy
# https-proxy=null

# if-present
# If true, npm will not exit with an error code when run-script is invoked for a script that isn't defined in the scripts section of package.json.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#if-present
if-present=false

# ignore-scripts
# If true, npm does not run scripts specified in package.json files.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#ignore-scripts
ignore-scripts=false

# include
# Option that allows for defining which types of dependencies to install.
# Default: ""
# Type: "prod", "dev", "optional", or "peer" (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#include
# include=""

# include-staged
# Allow installing "staged" published packages.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#include-staged
include-staged=false

# include-workspace-root
# Include the workspace root when workspaces are enabled for a command.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#include-workspace-root
include-workspace-root=false

# install-links
# When set, file: protocol dependencies will be packed and installed as regular dependencies instead of creating a symlink.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#install-links
install-links=true

# install-strategy
# Sets the strategy for installing packages in node_modules.
# Default: "hoisted"
# Type: "hoisted", "nested", "shallow", or "linked"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#install-strategy
install-strategy="hoisted"

# json
# Whether or not to output JSON data, rather than the normal output.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#json
json=false

# legacy-peer-deps
# Causes npm to completely ignore peerDependencies when building a package tree.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#legacy-peer-deps
legacy-peer-deps=false

# libc
# Override libc of native modules to install.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#libc
# libc=null

# link
# Used with npm ls, limiting output to only those packages that are linked.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#link
link=false

# local-address
# The IP address of the local interface to use when making connections to the npm registry. Must be IPv4 in versions of Node prior to 0.12.
# Default: null
# Type: IP Address
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#local-address
# local-address=null

# location
# Refers to which config file to use.
# Default: "user" unless --global is passed, which will also set this value to "global"
# Type: "global", "user", or "project"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#location
location="project"

# lockfile-version
# Set the lockfile format version to be used in package-lock.json and npm-shrinkwrap.json files.
# Default: Version 3 if no lockfile, auto-converting v1 lockfiles to v3, otherwise maintain current lockfile version.
# Type: null, 1, 2, 3, "1", "2", or "3"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#lockfile-version
lockfile-version=3

# loglevel
# What level of logs to report.
# Default: "notice"
# Type: "silent", "error", "warn", "notice", "http", "info", "verbose", or "silly"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#loglevel
loglevel="notice"

# logs-dir
# The location of npm's log directory.
# Default: A directory named _logs inside the cache
# Type: null or Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#logs-dir
logs-dir=./.cache/npm/logs

# logs-max
# The maximum number of log files to store.
# Default: 10
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#logs-max
logs-max=10

# long
# Show extended information in ls, search, and help-search.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#long
long=true

# maxsockets
# The maximum number of connections to use per origin (protocol/host/port combination).
# Default: 15
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#maxsockets
maxsockets=15

# message
# Commit message which is used by npm version when creating version commit.
# Default: "%s"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#message
message="%s"

# node-options
# Options to pass through to Node.js via the NODE_OPTIONS environment variable.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#node-options
# https://nodejs.org/api/cli.html
node-options="--max-old-space-size=4096 --trace-warnings --report-directory=./reports --report-filename=report-%YY%MM%DD-%HH%MM%SS-%pid.txt"

# noproxy
# Domain extensions that should bypass any proxies.
# Default: The value of the NO_PROXY environment variable
# Type: String (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#noproxy
# noproxy=""

# offline
# Force offline mode: no network requests will be done during install.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#offline
offline=false

# omit
# Dependency types to omit from the installation tree on disk.
# Default: 'dev' if the NODE_ENV environment variable is set to 'production', otherwise empty.
# Type: "dev", "optional", or "peer" (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#omit
# omit=""

# omit-lockfile-registry-resolved
# This option causes npm to create lock files without a resolved key for registry dependencies.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#omit-lockfile-registry-resolved
omit-lockfile-registry-resolved=false

# os
# Override OS of native modules to install.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#os
# os=null

# otp
# This is a one-time password from a two-factor authenticator.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#otp
# otp=null

# pack-destination
# Directory in which npm pack will save tarballs.
# Default: "."
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#pack-destination
pack-destination="."

# package
# The package or packages to install for npm exec.
# Default: ""
# Type: String (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#package
# package=""

# package-lock
# If set to false, then ignore package-lock.json files when installing.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#package-lock
package-lock=true

# package-lock-only
# If set to true, the current operation will only use the package-lock.json, ignoring node_modules.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#package-lock-only
package-lock-only=false

# parseable
# Output parseable results from commands that write to standard output.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#parseable
parseable=false

# prefer-dedupe
# Prefer to deduplicate packages if possible, rather than choosing a newer version of a dependency.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#prefer-dedupe
prefer-dedupe=false

# prefer-offline
# If true, staleness checks for cached data will be bypassed, but missing data will be requested from the server.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#prefer-offline
prefer-offline=false

# prefer-online
# If true, staleness checks for cached data will be forced, making the CLI look for updates immediately even for fresh package data.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#prefer-online
prefer-online=false

# prefix
# The location to install global items.
# Default: In global mode, the folder where the node executable is installed. Otherwise, the nearest parent folder containing either a package.json file or a node_modules folder.
# Type: Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#prefix
# prefix=""

# preid
# The "prerelease identifier" to use as a prefix for the "prerelease" part of a semver.
# Default: ""
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#preid
# preid=""

# progress
# When set to true, npm will display a progress bar during time intensive operations.
# Default: true unless running in a known CI system
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#progress
progress=true

# provenance
# When publishing from a supported cloud CI/CD system, the package will be publicly linked to where it was built and published from.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#provenance
provenance=false

# provenance-file
# When publishing, the provenance bundle at the given path will be used.
# Default: null
# Type: Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#provenance-file
# provenance-file=null

# proxy
# A proxy to use for outgoing http requests.
# Default: null
# Type: null, false, or URL
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#proxy
# proxy=null

# read-only
# This is used to mark a token as unable to publish when configuring limited access tokens with the npm token create command.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#read-only
read-only=false

# rebuild-bundle
# Rebuild bundled dependencies after installation.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#rebuild-bundle
rebuild-bundle=true

# registry
# The base URL of the npm registry.
# Default: "https://registry.npmjs.org/"
# Type: URL
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#registry
registry="https://registry.npmjs.org/"

# replace-registry-host
# Defines behavior for replacing the registry host in a lockfile with the configured registry.
# Default: "npmjs"
# Type: "npmjs", "never", "always", or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#replace-registry-host
replace-registry-host="npmjs"

# save
# Save installed packages to a package.json file as dependencies.
# Default: true unless when using npm update where it defaults to false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save
save=true

# save-bundle
# If a package would be saved at install time by the use of --save, --save-dev, or --save-optional, then also put it in the bundleDependencies list.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save-bundle
save-bundle=false

# save-dev
# Save installed packages to a package.json file as devDependencies.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save-dev
save-dev=false

# save-exact
# Dependencies saved to package.json will be configured with an exact version rather than using npm's default semver range operator.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save-exact
save-exact=true

# save-optional
# Save installed packages to a package.json file as optionalDependencies.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save-optional
save-optional=false

# save-peer
# Save installed packages to a package.json file as peerDependencies.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save-peer
save-peer=false

# save-prefix
# Configure how versions of packages installed to a package.json file via --save or --save-dev get prefixed.
# Default: "^"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save-prefix
save-prefix=""

# save-prod
# Save installed packages into dependencies specifically.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#save-prod
save-prod=false

# sbom-format
# SBOM format to use when generating SBOMs.
# Default: null
# Type: "cyclonedx" or "spdx"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#sbom-format
sbom-format="cyclonedx"

# sbom-type
# The type of package described by the generated SBOM.
# Default: "library"
# Type: "library", "application", or "framework"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#sbom-type
sbom-type="library"

# scope
# Associate an operation with a scope for a scoped registry.
# Default: the scope of the current project, if any, or ""
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#scope
# scope=""

# script-shell
# The shell to use for scripts run with the npm exec, npm run and npm init <package-spec> commands.
# Default: '/bin/sh' on POSIX systems, 'cmd.exe' on Windows
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#script-shell
# script-shell="/bin/sh"

# searchexclude
# Space-separated options that limit the results from search.
# Default: ""
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#searchexclude
# searchexclude=""

# searchlimit
# Number of items to limit search results to.
# Default: 20
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#searchlimit
searchlimit=20

# searchopts
# Space-separated options that are always passed to search.
# Default: ""
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#searchopts
# searchopts=""

# searchstaleness
# The age of the cache, in seconds, before another registry request is made if using legacy search endpoint.
# Default: 900
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#searchstaleness
searchstaleness=900

# shell
# The shell to run for the npm explore command.
# Default: SHELL environment variable, or "bash" on Posix, or "cmd.exe" on Windows
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#shell
# shell="bash"

# sign-git-commit
# If set to true, then the npm version command will commit the new package version using -S to add a signature.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#sign-git-commit
sign-git-commit=false

# sign-git-tag
# If set to true, then the npm version command will tag the version using -s to add a signature.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#sign-git-tag
sign-git-tag=false

# strict-peer-deps
# If set to true, and --legacy-peer-deps is not set, then any conflicting peerDependencies will be treated as an install failure.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#strict-peer-deps
strict-peer-deps=false

# strict-ssl
# Whether or not to do SSL key validation when making requests to the registry via https.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#strict-ssl
strict-ssl=true

# tag
# If you ask npm to install a package and don't tell it a specific version, then it will install the specified tag.
# Default: "latest"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#tag
tag="latest"

# tag-version-prefix
# If set, alters the prefix used when tagging a new version when performing a version increment using npm version.
# Default: "v"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#tag-version-prefix
tag-version-prefix="v"

# timing
# If true, writes timing information to a process specific json file in the cache or logs-dir.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#timing
timing=false

# umask
# The "umask" value to use when setting the file creation mode on files and folders.
# Default: 0
# Type: Octal numeric string in range 0000..0777 (0..511)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#umask
umask="0000"

# unicode
# When set to true, npm uses unicode characters in the tree output. When false, it uses ascii characters instead of unicode glyphs.
# Default: false on windows, true on mac/unix systems with a unicode locale
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#unicode
unicode=true

# update-notifier
# Set to false to suppress the update notification when using an older version of npm than the latest.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#update-notifier
update-notifier=true

# usage
# Show short usage output about the command specified.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#usage
usage=false

# user-agent
# Sets the User-Agent request header.
# Default: "npm/{npm-version} node/{node-version} {platform} {arch} workspaces/{workspaces} {ci}"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#user-agent
user-agent="npm/{npm-version} node/{node-version} {platform} {arch} workspaces/{workspaces} {ci}"

# userconfig
# The location of user-level configuration settings.
# Default: "~/.npmrc"
# Type: Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#userconfig
userconfig="~/.npmrc"

# version
# If true, output the npm version and exit successfully.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#version
version=false

# versions
# If true, output the npm version as well as node's process.versions map.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#versions
versions=false

# viewer
# The program to use to view help content.
# Default: "man" on Posix, "browser" on Windows
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#viewer
# viewer="man"

# which
# If there are multiple funding sources, which 1-indexed source URL to open.
# Default: null
# Type: null or Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#which
# which=null

# workspace
# Enable running a command in the context of the configured workspaces of the current project.
# Default:
# Type: String (can be set multiple times)
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#workspace
# workspace=""

# workspaces
# Set to true to run the command in the context of all configured workspaces.
# Default: null
# Type: null or Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#workspaces
workspaces=false

# workspaces-update
# If set to true, the npm cli will run an update after operations that may possibly change the workspaces installed to the node_modules folder.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#workspaces-update
workspaces-update=true

# yes
# Automatically answer "yes" to any prompts that npm might print on the command line.
# Default: null
# Type: null or Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#yes
yes=true

# also
# DEPRECATED: Please use --include=dev instead.
# Default: null
# Type: null, "dev", or "development"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#also
# also=null

# cache-max
# DEPRECATED: This option has been deprecated in favor of --prefer-online
# Default: Infinity
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#cache-max
# cache-max=Infinity

# cache-min
# DEPRECATED: This option has been deprecated in favor of --prefer-offline.
# Default: 0
# Type: Number
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#cache-min
# cache-min=0

# cert
# DEPRECATED: key and cert are no longer used for most registry operations.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#cert
# cert=null

# dev
# DEPRECATED: Please use --include=dev instead.
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#dev
# dev=false

# global-style
# DEPRECATED: This option has been deprecated in favor of --install-strategy=shallow
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#global-style
# global-style=false

# init.author.email
# DEPRECATED: Use --init-author-email instead.
# Default: ""
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#init-author-email
# init.author.email=""

# init.author.name
# DEPRECATED: Use --init-author-name instead.
# Default: ""
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#init-author-name
# init.author.name=""

# init.author.url
# DEPRECATED: Use --init-author-url instead.
# Default: ""
# Type: "" or URL
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#init-author-url
# init.author.url=""

# init.license
# DEPRECATED: Use --init-license instead.
# Default: "ISC"
# Type: String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#init-license
# init.license="ISC"

# init.module
# DEPRECATED: Use --init-module instead.
# Default: "~/.npm-init.js"
# Type: Path
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#init-module
# init.module="~/.npm-init.js"

# init.version
# DEPRECATED: Use --init-version instead.
# Default: "1.0.0"
# Type: SemVer string
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#init-version
# init.version="1.0.0"

# key
# DEPRECATED: key and cert are no longer used for most registry operations.
# Default: null
# Type: null or String
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#key
# key=null

# legacy-bundling
# DEPRECATED: This option has been deprecated in favor of --install-strategy=nested
# Default: false
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#legacy-bundling
# legacy-bundling=false

# only
# DEPRECATED: Use --omit=dev to omit dev dependencies from the install.
# Default: null
# Type: null, "prod", or "production"
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#only
# only=null

# optional
# DEPRECATED: Use --omit=optional to exclude optional dependencies, or --include=optional to include them.
# Default: null
# Type: null or Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#optional
# optional=null

# production
# DEPRECATED: Use --omit=dev instead.
# Default: null
# Type: null or Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#production
# production=null

# shrinkwrap
# DEPRECATED: Use the --package-lock setting instead.
# Default: true
# Type: Boolean
# Reference: https://docs.npmjs.com/cli/v10/using-npm/config#shrinkwrap
# shrinkwrap=true

###################################################
# PNPM Configuration Settings
###################################################

# hoist
# When true, all dependencies are hoisted to node_modules/.pnpm/node_modules.
# This makes unlisted dependencies accessible to all packages inside node_modules.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#hoist
hoist=true

# hoist-workspace-packages
# When true, packages from the workspaces are symlinked to either
# <workspace_root>/node_modules/.pnpm/node_modules or to <workspace_root>/node_modules
# depending on other hoisting settings (hoist-pattern and public-hoist-pattern).
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#hoist-workspace-packages
hoist-workspace-packages=true

# hoist-pattern
# Tells pnpm which packages should be hoisted to node_modules/.pnpm/node_modules.
# By default, all packages are hoisted.
# Default: ['*']
# Type: String[]
# Reference: https://pnpm.io/npmrc#hoist-pattern
hoist-pattern=["*"]

# public-hoist-pattern
# Unlike hoist-pattern, which hoists dependencies to a hidden modules directory
# inside the virtual store, public-hoist-pattern hoists dependencies matching
# the pattern to the root modules directory.
# Default: ['*eslint*', '*prettier*']
# Type: String[]
# Reference: https://pnpm.io/npmrc#public-hoist-pattern
public-hoist-pattern=["*eslint*", "*prettier*"]

# shamefully-hoist
# By default, pnpm creates a semistrict node_modules, meaning dependencies have
# access to undeclared dependencies but modules outside of node_modules do not.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#shamefully-hoist
shamefully-hoist=false

# modules-dir
# The directory in which dependencies will be installed (instead of node_modules).
# Default: node_modules
# Type: Path
# Reference: https://pnpm.io/npmrc#modules-dir
# modules-dir=.cache/node_modules

# node-linker
# Defines what linker should be used for installing Node packages.
# Default: isolated
# Type: isolated, hoisted, pnp
# Reference: https://pnpm.io/npmrc#node-linker
node-linker=isolated

# symlink
# When symlink is set to false, pnpm creates a virtual store directory without any symlinks.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#symlink
symlink=true

# enable-modules-dir
# When false, pnpm will not write any files to the modules directory (node_modules).
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#enable-modules-dir
enable-modules-dir=true

# virtual-store-dir
# The directory with links to the store. All direct and indirect dependencies
# of the project are linked into this directory.
# Default: node_modules/.pnpm
# Type: Path
# Reference: https://pnpm.io/npmrc#virtual-store-dir
virtual-store-dir=.cache/node_modules/.pnpm

# virtual-store-dir-max-length
# Sets the maximum allowed length of directory names inside the virtual store directory (node_modules/.pnpm).
# Default: 120
# Type: Number
# Reference: https://pnpm.io/npmrc#virtual-store-dir-max-length
virtual-store-dir-max-length=120

# package-import-method
# Controls the way packages are imported from the store.
# Default: auto
# Type: auto, hardlink, copy, clone, clone-or-copy
# Reference: https://pnpm.io/npmrc#package-import-method
package-import-method=auto

# modules-cache-max-age
# The time in minutes after which orphan packages from the modules directory should be removed.
# Default: 10080 (7 days in minutes)
# Type: Number
# Reference: https://pnpm.io/npmrc#modules-cache-max-age
modules-cache-max-age=10080

# dlx-cache-max-age
# The time in minutes after which dlx cache expires.
# Default: 1440 (1 day in minutes)
# Type: Number
# Reference: https://pnpm.io/npmrc#dlx-cache-max-age
dlx-cache-max-age=1440

# store-dir
# The location where all the packages are saved on the disk.
# Default:
# If the $PNPM_HOME env variable is set, then $PNPM_HOME/store
# If the $XDG_DATA_HOME env variable is set, then $XDG_DATA_HOME/pnpm/store
# On Windows: ~/AppData/Local/pnpm/store
# On macOS: ~/Library/pnpm/store
# On Linux: ~/.local/share/pnpm/store
# Type: Path
# Reference: https://pnpm.io/npmrc#store-dir
store-dir=.cache/pnpm/store

# verify-store-integrity
# If verify-store-integrity is set to false, files in the content-addressable
# store will not be checked during installation.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#verify-store-integrity
verify-store-integrity=true

# use-running-store-server
# Only allows installation with a store server. If no store server is running, installation will fail.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#use-running-store-server
use-running-store-server=false

# strict-store-pkg-content-check
# Some registries allow the exact same content to be published under different package names and/or versions.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#strict-store-pkg-content-check
strict-store-pkg-content-check=true

# lockfile
# When set to false, pnpm won't read or generate a pnpm-lock.yaml file.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#lockfile
lockfile=true

# prefer-frozen-lockfile
# When set to true and the available pnpm-lock.yaml satisfies the package.json dependencies directive,
# a headless installation is performed.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#prefer-frozen-lockfile
prefer-frozen-lockfile=true

# lockfile-include-tarball-url
# Add the full URL to the package's tarball to every entry in pnpm-lock.yaml.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#lockfile-include-tarball-url
lockfile-include-tarball-url=true

# git-branch-lockfile
# When set to true, the generated lockfile name after installation will be named based on the current branch name
# to completely avoid merge conflicts.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#git-branch-lockfile
git-branch-lockfile=false

# merge-git-branch-lockfiles-branch-pattern
# This configuration matches the current branch name to determine whether to merge all git branch lockfile files.
# Default: null
# Type: Array or null
# Reference: https://pnpm.io/npmrc#merge-git-branch-lockfiles-branch-pattern
# merge-git-branch-lockfiles-branch-pattern=null

# peers-suffix-max-length
# Max length of the peer IDs suffix added to dependency keys in the lockfile.
# Default: 1000
# Type: Number
# Reference: https://pnpm.io/npmrc#peers-suffix-max-length
peers-suffix-max-length=1000

# <scope>:registry
# The npm registry that should be used for packages of the specified scope.
# Default:
# Type: String
# Reference: https://pnpm.io/npmrc#scope-registry
# scope:registry=""

# <URL>:_authToken
# Define the authentication bearer token to use when accessing the specified registry.
# Default:
# Type: String
# Reference: https://pnpm.io/npmrc#url-_authtoken
# URL:_authToken=""

# <URL>:tokenHelper
# A token helper is an executable which outputs an auth token.
# This can be used in situations where the authToken is not a constant value but is something that refreshes regularly.
# Default:
# Type: Path
# Reference: https://pnpm.io/npmrc#url-tokenhelper
# URL:tokenHelper=""

# <URL>:cafile
# Define the path to a Certificate Authority file to use when accessing the specified registry.
# Default:
# Type: Path
# Reference: https://pnpm.io/npmrc#url-cafile
# URL:cafile=null

# <URL>:certfile
# Define the path to a certificate file to use when accessing the specified registry.
# Default:
# Type: Path
# Reference: https://pnpm.io/npmrc#url-certfile
# URL:certfile=null

# <URL>:keyfile
# Define the path to a client key file to use when accessing the specified registry.
# Default:
# Type: Path
# Reference: https://pnpm.io/npmrc#url-keyfile
# URL:keyfile=null

# git-shallow-hosts
# When fetching dependencies that are Git repositories, if the host is listed in this setting,
# pnpm will use shallow cloning to fetch only the needed commit, not all the history.
# Default: ['github.com', 'gist.github.com', 'gitlab.com', 'bitbucket.com', 'bitbucket.org']
# Type: string[]
# Reference: https://pnpm.io/npmrc#git-shallow-hosts
git-shallow-hosts=['github.com', 'gist.github.com', 'gitlab.com', 'bitbucket.com', 'bitbucket.org']

# network-concurrency
# Controls the maximum number of HTTP(S) requests to process simultaneously.
# Default: 16
# Type: Number
# Reference: https://pnpm.io/npmrc#network-concurrency
network-concurrency=16

# auto-install-peers
# When true, any missing non-optional peer dependencies are automatically installed.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#auto-install-peers
auto-install-peers=true

# dedupe-peer-dependents
# When this setting is set to true, packages with peer dependencies will be deduplicated after peers resolution.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#dedupe-peer-dependents
dedupe-peer-dependents=true

# strict-peer-dependencies
# If this is enabled, commands will fail if there is a missing or invalid peer dependency in the tree.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#strict-peer-dependencies
strict-peer-dependencies=false

# resolve-peers-from-workspace-root
# When enabled, dependencies of the root workspace project are used to resolve peer dependencies of any projects in the workspace.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#resolve-peers-from-workspace-root
resolve-peers-from-workspace-root=true

# use-beta-cli
# Experimental option that enables beta features of the CLI.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#use-beta-cli
use-beta-cli=false

# recursive-install
# If this is enabled, the primary behavior of pnpm install becomes that of pnpm install -r.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#recursive-install
recursive-install=true

# npm-path
# The location of the npm binary that pnpm uses for some actions, like publishing.
# Default:
# Type: path
# Reference: https://pnpm.io/npmrc#npm-path
# npm-path=null

# package-manager-strict
# If this setting is disabled, pnpm will not fail if a different package manager is specified in the packageManager field of package.json.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#package-manager-strict
package-manager-strict=true

# package-manager-strict-version
# When enabled, pnpm will fail if its version doesn't exactly match the version specified in the packageManager field of package.json.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#package-manager-strict-version
package-manager-strict-version=true

# manage-package-manager-versions
# When enabled, pnpm will automatically download and run the version of pnpm specified in the packageManager field of package.json.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#manage-package-manager-versions
manage-package-manager-versions=true

# ignore-dep-scripts
# Do not execute any scripts of the installed packages. Scripts of the projects are executed.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#ignore-dep-scripts
ignore-dep-scripts=false

# child-concurrency
# The maximum number of child processes to allocate simultaneously to build node_modules.
# Default: 5
# Type: Number
# Reference: https://pnpm.io/npmrc#child-concurrency
child-concurrency=5

# side-effects-cache
# Use and cache the results of (pre/post)install hooks.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#side-effects-cache
side-effects-cache=true

# side-effects-cache-readonly
# Only use the side effects cache if present, do not create it for new packages.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#side-effects-cache-readonly
side-effects-cache-readonly=false

# unsafe-perm
# Set to true to enable UID/GID switching when running package scripts.
# Default: false IF running as root, ELSE true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#unsafe-perm
unsafe-perm=false

# use-node-version
# Specifies which exact Node.js version should be used for the project's runtime.
# Default: undefined
# Type: semver
# Reference: https://pnpm.io/npmrc#use-node-version
# use-node-version=20.17.0

# node-version
# The Node.js version to use when checking a package's engines setting.
# Default: the value returned by node -v, without the v prefix
# Type: semver
# Reference: https://pnpm.io/npmrc#node-version
# node-version=20.17.0

# node-mirror:<releaseDir>
# Sets the base URL for downloading Node.js.
# Default: https://nodejs.org/download/<releaseDir>/
# Type: URL
# Reference: https://pnpm.io/npmrc#node-mirror-releasedir
# node-mirror:<releaseDir>=https://nodejs.org/download/<releaseDir>/

# link-workspace-packages
# If this is enabled, locally available packages are linked to node_modules instead of being downloaded from the registry.
# Default: false
# Type: true, false, deep
# Reference: https://pnpm.io/npmrc#link-workspace-packages
link-workspace-packages=false

# prefer-workspace-packages
# If this is enabled, local packages from the workspace are preferred over packages from the registry.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#prefer-workspace-packages
prefer-workspace-packages=false

# shared-workspace-lockfile
# If this is enabled, pnpm creates a single pnpm-lock.yaml file in the root of the workspace.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#shared-workspace-lockfile
shared-workspace-lockfile=true

# save-workspace-protocol
# Controls how dependencies that are linked from the workspace are added to package.json.
# Default: rolling
# Type: true, false, rolling
# Reference: https://pnpm.io/npmrc#save-workspace-protocol
save-workspace-protocol=rolling

# ignore-workspace-cycles
# When set to true, no workspace cycle warnings will be printed.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#ignore-workspace-cycles
ignore-workspace-cycles=false

# disallow-workspace-cycles
# When set to true, installation will fail if the workspace has cycles.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#disallow-workspace-cycles
disallow-workspace-cycles=false

# global-dir
# Specify a custom directory to store global packages.
# Default:
# Type: path
# Reference: https://pnpm.io/npmrc#global-dir
# global-dir=null

# global-bin-dir
# Allows to set the target directory for the bin files of globally installed packages.
# Default:
# Type: path
# Reference: https://pnpm.io/npmrc#global-bin-dir
# global-bin-dir=null

# state-dir
# The directory where pnpm creates the pnpm-state.json file that is currently used only by the update checker.
# Default:
# Type: path
# Reference: https://pnpm.io/npmrc#state-dir
state-dir=.cache/pnpm/state

# cache-dir
# The location of the cache (package metadata and dlx).
# Default:
# Type: path
# Reference: https://pnpm.io/npmrc#cache-dir
cache-dir=.cache/pnpm/cache

# use-stderr
# When true, all the output is written to stderr.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#use-stderr
use-stderr=false

# prefer-symlinked-executables
# Create symlinks to executables in node_modules/.bin instead of command shims.
# Default: true, when node-linker is set to hoisted and the system is POSIX
# Type: Boolean
# Reference: https://pnpm.io/npmrc#prefer-symlinked-executables
prefer-symlinked-executables=true

# ignore-compatibility-db
# During installation, the dependencies of some packages are automatically patched.
# If you want to disable this, set this config to false.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#ignore-compatibility-db
ignore-compatibility-db=false

# resolution-mode
# When resolution-mode is set to time-based, dependencies will be resolved according to the selected mode.
# Default: highest
# Type: highest, time-based, lowest-direct
# Reference: https://pnpm.io/npmrc#resolution-mode
resolution-mode=highest

# registry-supports-time-field
# Set this to true if the registry that you are using returns the "time" field in the abbreviated metadata.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#registry-supports-time-field
registry-supports-time-field=false

# extend-node-path
# When false, the NODE_PATH environment variable is not set in the command shims.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#extend-node-path
extend-node-path=true

# deploy-all-files
# When deploying a package or installing a local package, all files of the package are copied.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#deploy-all-files
deploy-all-files=false

# dedupe-direct-deps
# When set to true, dependencies that are already symlinked to the root node_modules directory of the workspace will not be symlinked to subproject node_modules directories.
# Default: false
# Type: Boolean
# Reference: https://pnpm.io/npmrc#dedupe-direct-deps
dedupe-direct-deps=false

# dedupe-injected-deps
# When this setting is enabled, dependencies that are injected will be symlinked from the workspace whenever possible.
# Default: true
# Type: Boolean
# Reference: https://pnpm.io/npmrc#dedupe-injected-deps
dedupe-injected-deps=true
