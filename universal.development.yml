# Docker Compose for development
services:
  api:
    env_file:
      - .env.universal
      - .env.development
    # volumes:
    #   - ./services/api/src:/app/src
    #   - ./services/api/pyproject.toml:/app/pyproject.toml
    #   - ./services/api/poetry.lock:/app/poetry.lock
    #   - ./services/api/poetry.toml:/app/poetry.toml
    ports:
      - "${API_EXPOSED_PORT:-8000}:${API_PORT:-8000}"

  database:
    env_file:
      - .env.universal
      - .env.development

  keycloak-db:
    env_file:
      - .env.universal
      - .env.development

  keycloak:
    env_file:
      - .env.universal
      - .env.development
    # environment:
    #   KEYCLOAK_IMPORT: /opt/keycloak/data/import/development-realm.json
    volumes:
      - ./services/keycloak/realms/development-realm.json:/opt/keycloak/data/import/development-realm.json:ro
    entrypoint:
      [
        "/opt/keycloak/bin/kc.sh",
        "start-dev",
        "--import-realm",
        "--hostname=https://${FQDN:-localhost}:${WEB_HTTPS_EXPOSED_PORT:-443}/auth",
        "--http-relative-path=${KEYCLOAK_HTTP_RELATIVE_PATH:-/auth}",
        "--db=${KEYCLOAK_DB_VENDOR:-postgres}",
        "--db-url-host=${KEYCLOAK_DB_HOSTNAME:-keycloak-db}",
        "--db-username=${KEYCLOAK_DB_USER:-keycloak}",
        "--db-password=${KEYCLOAK_DB_PASSWORD:-keycloak}",
        "--db-url-database=${KEYCLOAK_DB_NAME:-keycloak}",
      ]

  pgadmin:
    env_file:
      - .env.universal
      - .env.development

  web:
    env_file:
      - .env.universal
      - .env.development
    # volumes:
    #   - ./apps/ui:/app

  portainer:
    image: portainer/portainer-ce@sha256:224a378fbc5ae579dc9d570c5ca2e5e981a4a003c8d7c2c5b5e482af97c2f87c
    env_file:
      - .env.universal
      - .env.development
