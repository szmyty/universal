# Apache SSL configuration

# HTTPS port to listen on
# This is the port where the server will listen for secure connections.
Listen 8085

# üîê Global SSL settings
SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
SSLHonorCipherOrder on
SSLProtocol -all +TLSv1.2 +TLSv1.3
SSLProxyProtocol -all +TLSv1.2 +TLSv1.3
SSLPassPhraseDialog builtin
SSLSessionCache "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout 300

# üö´ Disable legacy HTTP methods
TraceEnable off

# üåê SSL Virtual Host
<VirtualHost _default_:8085>
    DocumentRoot "/usr/local/apache2/htdocs"
    ServerName localhost:8085
    ServerAdmin admin@localhost
    ErrorLog /proc/self/fd/2
    TransferLog /proc/self/fd/1

    # üîê OIDC Keycloak SSO
    RewriteCond "%{REQUEST_URI}" "^/app/oauth2callback.*"
    RewriteCond "%{QUERY_STRING}" "(.*(?:^|&))iss=([^&]*)&?(.*)&?$"
    RewriteCond "%2" "!^https%3A%2F%2Flocalhost%3A8085%2Fauth%2Frealms%2F.*$" [NC]
    RewriteRule "^.*$" "/?" [R]

    OIDCCryptoPassphrase a-supersecret-random-secret-used-by-apache-oidc
    OIDCProviderMetadataURL https://localhost:8085/auth/realms/universal/.well-known/openid-configuration
    OIDCClientID universal
    OIDCClientSecret <your-client-secret>
    OIDCRedirectURI https://localhost:8085/app/oauth2callback
    OIDCRemoteUserClaim email
    OIDCScope "openid profile email"
    OIDCSSLValidateServer off

    # üîÅ Reverse Proxy to React/Vite app
    <Location /app>
        AuthType openid-connect
        Require valid-user
    </Location>

    ProxyRequests On
    ProxyPreserveHost On
    AllowEncodedSlashes NoDecode
    ProxyPass / http://localhost:5173/
    ProxyPassReverse / http://localhost:5173/

    # üîÅ Reverse Proxy to Keycloak
    <Location /auth>
        ProxyPass http://keycloak:8080/auth
        ProxyPassReverse http://keycloak:8080/auth
    </Location>

    # üîÅ Reverse Proxy to FastAPI backend
    <Location /api>
        AuthType openid-connect
        Require valid-user
        RequestHeader set Authorization "Bearer %{oidc_access_token}e" env=OIDC_access_token
        ProxyPass http://api:8000
        ProxyPassReverse http://api:8000
    </Location>

    # üîß Proxy Headers
    RequestHeader set X-Remote-User %{REMOTE_USER}s
    RequestHeader set X-Session-Id %{oidc_claim_session_state}e
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "%{SERVER_PORT}s"

    # üåç CORS
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, X-Remote-User, Access-Control-Allow-Origin"
    Header set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Strict-Transport-Security "max-age=63072000;"

    # üîê SSL Setup
    SSLEngine on
    SSLCertificateFile "/usr/local/apache2/conf/server.crt"
    SSLCertificateKeyFile "/usr/local/apache2/conf/server.key"

    # üì§ Optional: Enable standard SSL env vars for CGI or scripts
    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory "/usr/local/apache2/cgi-bin">
        SSLOptions +StdEnvVars
    </Directory>

    # üß† Browser compatibility workarounds
    BrowserMatch "MSIE [2-5]" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0

    # üìù Per-VirtualHost SSL log
    CustomLog /proc/self/fd/1 "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
</VirtualHost>
